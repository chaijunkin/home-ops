---
# yaml-language-server: $schema=https://json.schemastore.org/helmfile

helmDefaults:
  cleanupOnFail: true
  wait: true
  waitForJobs: true

releases:
  - name: cilium
    namespace: kube-system
    chart: oci://ghcr.io/home-operations/charts-mirror/cilium
    version: 1.18.0
    values: ["../kubernetes/apps/kube-system/cilium/app/helm/values.yaml"]

  ## helm upgrade -i coredns oci://ghcr.io/coredns/charts/coredns --version 1.43.0 -
  # -namespace kube-system --values kubernetes/apps/kube-system/coredns/app/helm/valu
  # es.yaml
  - name: coredns
    namespace: kube-system
    chart: oci://ghcr.io/coredns/charts/coredns
    version: 1.43.0
    values: ["../kubernetes/apps/kube-system/coredns/app/helm/values.yaml"]
    needs: ["kube-system/cilium"]

  # - name: spegel
  #   namespace: kube-system
  #   chart: oci://ghcr.io/spegel-org/helm-charts/spegel
  #   version: 0.3.0
  #   values: ['../kubernetes/apps/kube-system/spegel/app/helm/values.yaml']
  #   needs: ['kube-system/coredns']

  - name: cert-manager
    namespace: cert-manager
    chart: oci://quay.io/jetstack/charts/cert-manager
    version: v1.18.2
    values:
      ["../kubernetes/apps/cert-manager/cert-manager/app/helm/values.yaml"]
  #   needs: ['kube-system/spegel']
  # Deploy bitwarden secrets before external-secrets needs them
  - name: bitwarden
    namespace: kube-system
    chart: oci://ghcr.io/bjw-s-labs/helm/app-template
    version: 4.2.0
    values:
      [
        "../kubernetes/apps/kube-system/external-secrets/bitwarden/helm/values.yaml",
      ]
    # hooks:
    #   - # Deploy bitwarden secret using sops decrypt first
    #     events: ['presync']
    #     command: sh
    #     args:
    #       - -c
    #       - |
    #         echo "Decrypting and applying bitwarden secret..."
    #         # Use sops to decrypt and apply the secret directly
    #         sops -d ../kubernetes/apps/kube-system/external-secrets/bitwarden/secret.sops.yaml | kubectl apply -f -
    #         echo "Bitwarden secret applied successfully"
    #     showlogs: true

  - name: external-secrets
    namespace: kube-system
    chart: oci://ghcr.io/external-secrets/charts/external-secrets
    version: 0.19.0
    values:
      ["../kubernetes/apps/kube-system/external-secrets/app/helm/values.yaml"]
    hooks:
      - # Apply cluster secret store after external-secrets is ready
        events: ["postsync"]
        command: kubectl
        args:
          - apply
          - --namespace=kube-system
          - --server-side
          - --field-manager=kustomize-controller
          - --filename
          - ../kubernetes/apps/kube-system/external-secrets/stores/clustersecretstore.yaml
          - --wait=true
        showlogs: true
    needs: ["kube-system/bitwarden"]

  - name: flux-operator
    namespace: flux-system
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
    version: 0.26.0
    values:
      ["../kubernetes/apps/flux-system/flux-operator/app/helm/values.yaml"]
    needs: ["kube-system/external-secrets"]

  - name: flux-instance
    namespace: flux-system
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-instance
    version: 0.26.0
    values:
      ["../kubernetes/apps/flux-system/flux-instance/app/helm/values.yaml"]
    needs: ["flux-system/flux-operator"]
    # hooks:
    #   - # Deploy bitwarden secret using sops decrypt first
    #     events: ['postsync']
    #     command: sh
    #     args:
    #       - -c
    #       - |
    #         echo "Decrypting and applying flux bootstrap..."
    #         # Use sops to decrypt and apply the secret directly
    #         sops -d ../kubernetes/flux/cluster/secret.sops.yaml | kubectl apply -f -
    #         echo "Flux bootstrap applied successfully"
    ##### THIS NEED TO CHANGE TO GET decrypt secret.sops.yaml in bootstrap directly
