---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      qbittorrent:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          # gluetu3scalation: true
          app:
            image:
              repository: ghcr.io/chaijunkin/qbittorrent
              tag: 4.6.4@sha256:e4364557daecfc87060a758436f97b0f72a8606f7a3ca8104850fe17f27174d7
            env:
              TZ: ${TIMEZONE}
              UMASK: "022"
              QBITTORRENT__PORT: &port 8080
              QBITTORRENT__BT_PORT: &port-bt "${SECRET_VPN_FORWARDED_PORT_1:=57683}"
              QBT_BitTorrent__Session__Interface: vxlan0
              QBT_BitTorrent__Session__InterfaceName: vxlan0
            resources:
              requests:
                cpu: 25m
                memory: 1G
              limits:
                memory: 10G
          # reannounce:
          #   image:
          #     repository: ghcr.io/buroa/qbittools
          #     tag: v0.11.0
          #   args: ["reannounce", "-s", "localhost", "-p", "8080"]
        pod:
          annotations:
            setGateway: "true"
        #   affinity:
        #     podAntiAffinity:
        #       requiredDuringSchedulingIgnoredDuringExecution:
        #         - labelSelector:
        #             matchExpressions:
        #               - key: app.kubernetes.io/name
        #                 operator: In
        #                 values: ["sabnzbd"]
        #           topologyKey: kubernetes.io/hostname
          securityContext:
            runAsUser: 1004
            runAsGroup: 1004
            fsGroup: 1004
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        nameOverride: *app
        ports:
          http:
            port: *port
      bittorrent:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.10.30.13
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads Service
          gethomepage.dev/name: qBittorrent
          gethomepage.dev/icon: qbittorrent.png
          gethomepage.dev/description: Torrent Client
          gethomepage.dev/widget.type: qbittorrent
          gethomepage.dev/widget.url: http://qbittorrent.downloads:8080
          gethomepage.dev/widget.username: "{{HOMEPAGE_VAR_QBITTORRENT_USERNAME}}"
          gethomepage.dev/widget.password: "{{HOMEPAGE_VAR_QBITTORRENT_PASSWORD}}"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/qbittorrent/onedark.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: *app
      media:
        enabled: true
        existingClaim: pvc-smb-media
        