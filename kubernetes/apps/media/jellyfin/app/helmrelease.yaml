---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.10.6
              pullPolicy: IfNotPresent
            env:
              TZ: ${TIMEZONE}
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: https://{{ .Release.Name }}.${SECRET_DOMAIN}

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 512Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 4Gi
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
            # fsGroupChangePolicy: OnRootMismatch
            # supplementalGroups: [44, 10000]
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.10.30.17
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media Service
          gethomepage.dev/name: jellyfin
          gethomepage.dev/icon: https://raw.githubusercontent.com/chaijunkin/dashboard-icons/main/png/jellyfin.png
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: jellyfin
          gethomepage.dev/widget.url: http://jellyfin.media:8096
          # gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_jellyfin_TOKEN}}"
          # external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: *app
      # # Separate PVC for cache to avoid backing up cache files
      # jellyfin-cache:
      #   existingClaim: jellyfin-cache
      #   globalMounts:
      #     - path: /config/Library/Application Support/jellyfin Media Server/Cache
      # logs:
      #   type: emptyDir
      #   globalMounts:
      #     - path: /config/Library/Application Support/jellyfin Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        enabled: true
        existingClaim: pvc-smb-media
        globalMounts:
          - path: /media
