# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app neko
  namespace: flux-system
spec:
  releaseName: *app
  targetNamespace: media
  chart:
    spec:
      chart: app-template
      version: "3.7.0"
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 2m0s
  values:
    controllers:
      *app :
        replicas: 1 # active nas
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              # repository: ghcr.io/m1k1o/neko/intel-firefox
              repository: ghcr.io/m1k1o/neko/firefox
              tag: "2.9.0"
            env:
              NEKO_SCREEN: 1280x720@30
              NEKO_PROXY: "true"
              NEKO_TCPMUX: &mux "5101"
              NEKO_UDPMUX: *mux
              NEKO_ICELITE: "true"
              NEKO_NAT1TO1: 127.0.0.1
            envFrom:
              - secretRef:
                  name: neko-secret
            resources:
              requests:
                cpu: 1000m

    persistence:
      config:
        name: neko-firefox-config
        type: configMap
        advancedMounts:
          *app :
            *app :
              - path: /usr/lib/firefox/distribution/policies.json
                readOnly: true
                subPath: policies.json
      profile:
        existingClaim: pvc-smb-neko
        advancedMounts:
          *app :
            *app :
              - path: /home/neko/.mozilla/firefox/profile.default
      dri:
        type: hostPath
        hostPath: /dev/dri
      shm:
        type: hostPath
        hostPath: /dev/shm

    service:
      main:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: 80
            targetPort: 8080
          mux:
            port: &port 5101
            targetPort: *port
          muxudp:
            port: *port
            targetPort: *port
            protocol: UDP

    ingress:
      main:
        className: external
        annotations:
          nginx.ingress.kubernetes.io/proxy-read-timeout: "14400"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "14400"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-body-size: 1000M
          # nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-external.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          # nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host movienight.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                pathType: Prefix
        tls:
          - hosts:
              - *host