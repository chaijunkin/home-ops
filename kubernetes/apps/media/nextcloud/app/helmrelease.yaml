---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.5.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: media
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: nextcloud
      # tag: 24.0.3-apache
      pullPolicy: IfNotPresent
      # pullSecrets:
      #   - myRegistrKeySecretName
    nginx:
      enabled: false
    lifecycle:
      postStartCommand: ["/bin/sh", "-c", "echo \"ServerName drive.cloudjur.com\" | tee -a /etc/apache2/apache2.conf"]
    deploymentAnnotations:
      reloader.stakater.com/auto: "true"

    nextcloud:
      host: &host drive.${SECRET_DOMAIN}
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:15
          envFrom:
            - secretRef:
                name: nextcloud-secret
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' =>
            array (
              0 => '${SERVICE_CIDR}',
            ),
            'forwarded_for_headers' =>
            array (
              0 => 'HTTP_X_FORWARDED_FOR',
            ),
            'overwrite.cli.url' => 'https://drive.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
            'skeletondirectory' => '',
            'default_phone_region' => 'MY',
          );
      datadir: /var/www/data
      existingSecret:
        enabled: true
        secretName: &secret nextcloud-secret
        usernameKey: NEXTCLOUD_ADMIN_USER
        passwordKey: NEXTCLOUD_ADMIN_PASSWORD
        # tokenKey: METRICS_TOKEN
        smtpHostKey: SMTP_HOST
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
      extraEnv:
        - name: REDIS_HOST
          value: nextcloud-redis.media.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: *secret
              key: NEXTCLOUD_REDIS_PASSWORD
      
      mail:
        enabled: true
        fromAddress: apphub
        domain: ${SECRET_DOMAIN}
        smtp:
          port: 465
          authtype: tls
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 1000
      #   runAsNonRoot: true
      #   readOnlyRootFilesystem: false
    redis:
      enabled: false
      # auth:
      #   enabled: true
      #   redis.auth.existingSecret: nextcloud-secret
      #   redis.auth.existingSecretPasswordKey: NEXTCLOUD_REDIS_PASSWORD
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: 'postgresql'
      host: postgres-rw.database.svc.cluster.local
      existingSecret:
        enabled: true
        secretName: *secret
        usernameKey: NEXTCLOUD_POSTGRESQL_USER
        passwordKey: NEXTCLOUD_POSTGRESQL_PASSWORD
        hostKey: NEXTCLOUD_POSTGRESQL_HOST
        databaseKey: NEXTCLOUD_POSTGRESQL_NAME
    ingress:
      enabled: true
      className: "external"
      # servicePort: http
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Media Service
        gethomepage.dev/name: Nextcloud
        gethomepage.dev/description: File Hosting Service
        gethomepage.dev/icon: nextcloud.png
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        # nginx.ingress.kubernetes.io/server-snippet: |-
        #   server_tokens off;
        #   proxy_hide_header X-Powered-By;
        
        #   # Rule borrowed from .htaccess to handle Microsoft DAV clients
        #   location = / {
        #     if ( $http_user_agent ~ ^DavClnt ) {
        #       return 302 /remote.php/webdav/$is_args$args;
        #     }
        #   }
     


        #   location ^~ /.well-known {
          
        #     # The rules in this block are an adaptation of the rules
        #     # in .htaccess that concern /.well-known.

        #     location = /.well-known/carddav { return 301 /remote.php/dav/; }
        #     location = /.well-known/caldav  { return 301 /remote.php/dav/; }
            
        #     location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
        #     location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
            
        #     # Let Nextcloud's API for /.well-known URIs handle all other
        #     # requests by passing them to the front-end controller.
        #     return 301 /index.php$request_uri;
        #   }
          
        #   # Rules borrowed from .htaccess to hide certain paths from clients
        #   location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        #     deny all;
        #   }
        #   location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
        #     deny all;
        #   }

        #   location = /robots.txt {
        #       allow all;
        #       log_not_found off;
        #       access_log off;
        #   }
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      existingClaim: pvc-smb-nextcloud
      # storageClass: local-path
      # nextcloudData:
      #   enabled: true
        # existingClaim: pvc-smb-nextcloud
        # accessMode: ReadWriteMany
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
