# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: &app ap
#   namespace: network
#   labels:
#     app.kubernetes.io/name: *app
#     app.kubernetes.io/instance: *app
# spec:
#   type: ClusterIP
#   clusterIP: None
#   ports:
#     - name: http
#       port: &port 80
#       protocol: TCP
#       targetPort: *port
# ---
# apiVersion: discovery.k8s.io/v1
# kind: EndpointSlice
# metadata:
#   name: &app ap
#   namespace: network
#   labels:
#     kubernetes.io/service-name: *app
# addressType: IPv4
# ports:
#   - name: http
#     appProtocol: http
#     protocol: TCP
#     port: 80
# endpoints:
#   - addresses:
#       - "192.168.1.4"
# ---
# apiVersion: gateway.networking.k8s.io/v1
# kind: HTTPRoute
# metadata:
#   name: ap
#   namespace: network
#   labels:
#     app.kubernetes.io/name: ap
#     app.kubernetes.io/instance: ap
# spec:
#   parentRefs:
#     - name: envoy-internal
#       namespace: network
#       sectionName: https
#   hostnames:
#     - ap.cloudjur.com
#   rules:
#     - matches:
#         - path:
#             type: PathPrefix
#             value: /
#       backendRefs:
#         - name: ap
#           port: 80
apiVersion: v1
kind: Service
metadata:
  name: ap
spec:
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: ap
  labels:
    kubernetes.io/service-name: ap
    endpointslice.kubernetes.io/managed-by: cluster-admins
addressType: IPv4
ports:
  - name: https
    protocol: TCP
    port: 443
endpoints:
  - addresses:
      - 192.168.1.4
    conditions:
      ready: true # https://github.com/argoproj/argo-cd/issues/15554
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: ap
spec:
  parentRefs:
    - {name: envoy-internal, namespace: network}
  hostnames: [ap.cloudjur.com]
  rules:
    - backendRefs: [{name: ap, port: 443}]
