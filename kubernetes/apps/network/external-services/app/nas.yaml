---
apiVersion: v1
kind: Service
metadata:
  name: &app nas
  namespace: network
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: &port 9090
      protocol: TCP
      targetPort: *port
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: &app nas
  namespace: network
  labels:
    kubernetes.io/service-name: *app
addressType: IPv4
ports:
  - name: http
    appProtocol: https
    protocol: TCP
    port: 9090
endpoints:
  - addresses:
      - "10.10.30.10"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app nas
  namespace: network
  annotations:
    gethomepage.dev/enabled: "true"
    gethomepage.dev/icon: https://raw.githubusercontent.com/chaijunkin/dashboard-icons/main/png/cockpit.png
    gethomepage.dev/name: NAS
    gethomepage.dev/group: Compute/Storage Infrastructure
    gethomepage.dev/description: SMB service provider
    external-dns.alpha.kubernetes.io/hostname: nas.${SECRET_DOMAIN}
    # ingress.kubernetes.io/configuration-snippet: "proxy_set_header Host $http_host;\nproxy_set_header
    #   X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   \     \nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header
    #   Connection $connection_upgrade;      "
    # nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    # nginx.ingress.kubernetes.io/cors-allow-headers: Authorization
    # nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
    # nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/server-snippet: |-
      client_max_body_size 100G;
      server_tokens off;
      proxy_hide_header X-Powered-By;
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: internal
  rules:
    - host: &host nas.${SECRET_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: *app
                port:
                  number: 9090
  tls:
    - hosts:
        - *host