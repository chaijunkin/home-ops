---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: ingress-nginx-internal
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 4.13.0
  url: oci://ghcr.io/home-operations/charts-mirror/ingress-nginx
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx-internal
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: ingress-nginx-internal
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: ingress-nginx-internal
    controller:
      replicaCount: 1
      service:
        annotations:
          lbipam.cilium.io/ips: "10.10.30.28"
        externalTrafficPolicy: Cluster
      ingressClassResource:
        name: internal
        default: true
        controllerValue: k8s.io/internal
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["internal"]
      config:
        proxy-body-size: 0
        proxy-buffer-size: 16k
        hsts: false
        ssl-prefer-server-ciphers: false
        ssl-protocols: "TLSv1.3 TLSv1.2"
        ssl-redirect: false
        server-tokens: false
        enable-real-ip: true
        enable-brotli: "true"
        #custom-http-errors: 404,403
        log-format-escape-json: "true"
        log-format-upstream:
          '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent" }'
        addHeaders: "networking/nginx-custom"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: "network/cloudjur-com-production-tls"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/instance: ingress-nginx-internal
              app.kubernetes.io/component: controller
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
        limits:
          memory: 500Mi
    defaultBackend:
      enabled: false
