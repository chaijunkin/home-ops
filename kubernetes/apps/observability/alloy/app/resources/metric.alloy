
// OTLP receiver for metrics/traces
otelcol.receiver.otlp "default" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }

  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    metrics = [otelcol.processor.batch.default.input]
    logs    = [otelcol.processor.batch.default.input]
    traces  = [otelcol.processor.batch.default.input]
  }
}

// Batch processor for efficient metrics/trace processing
otelcol.processor.batch "default" {
  timeout               = "5s"
  send_batch_size      = 1024
  send_batch_max_size  = 2048

  output {
    metrics = [otelcol.processor.attributes.default.input]
    logs    = [otelcol.processor.attributes.default.input]
    traces  = [otelcol.processor.attributes.default.input]
  }
}

// otelcol.processor.k8sattributes "default" {
//   extract {
//     label {
//       from      = "pod"
//       key_regex = "(.*)/(.*)"
//       tag_name  = "$1.$2"
//     }
//
//     metadata = [
//       "k8s.namespace.name",
//       "k8s.deployment.name",
//       "k8s.statefulset.name",
//       "k8s.daemonset.name",
//       "k8s.cronjob.name",
//       "k8s.job.name",
//       "k8s.node.name",
//       "k8s.pod.name",
//       "k8s.pod.uid",
//       "k8s.pod.start_time",
//     ]
//
//     otel_annotations = true
//   }
//
//   output {
//     metrics = [otelcol.exporter.prometheus.default.input]
//     logs    = [otelcol.exporter.loki.default.input]
//     traces  = [otelcol.exporter.otlp.tempo.input, otelcol.exporter.otlphttp.tempo.input]
//   }
// }

// Add cluster and environment attributes
otelcol.processor.attributes "default" {
  action {
    key    = "cluster"
    value  = "main"
    action = "insert"
  }

  action {
    key    = "region"
    value  = "main"
    action = "insert"
  }

  output {
    metrics = [otelcol.exporter.prometheus.default.input]
    logs    = [otelcol.exporter.loki.default.input]
    traces  = [otelcol.exporter.otlp.tempo.input, otelcol.exporter.otlphttp.tempo.input]
  }
}

otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "http://tempo.observability:4317"
    tls {
      insecure = true
      insecure_skip_verify = true
    }
  }
}

otelcol.exporter.otlphttp "tempo" {
  client {
    endpoint = "http://tempo.observability:4318"
    tls {
      insecure = true
      insecure_skip_verify = true
    }
    headers = {
      "Content-Type" = "application/json",
    }
  }
}

// Export logs to Loki
otelcol.exporter.loki "default" {
  forward_to = [loki.write.default.receiver]
}

// Export metrics to Metrics Provider via Prometheus remote write
otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}

// Prometheus remote write configuration
prometheus.remote_write "default" {
  endpoint {
    url = "http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090/api/v1/write"

    // Headers for authentication if needed
    // headers = {
    //   "X-Scope-OrgID" = "1"
    // }
  }
}