---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 7.3.3
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    replicas: 1
    podAnnotations:
      reloader.stakater.com/auto: "true"
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: *app
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      # auth:
      #   signout_redirect_url: https://sso.${SECRET_DOMAIN}/application/o/grafana/end-session/
      #   oauth_auto_login: false
      #   oauth_allow_insecure_email_lookup: true
      # auth.anonymous:
      #   enabled: true
      #   org_name: Main Org.
      #   org_role: Viewer
      #   hide_version: true
      # auth.generic_oauth:
      #   name: authentik
      #   enabled: true
      #   scopes: openid email profile
      #   auth_url: https://sso.${SECRET_DOMAIN}/application/o/authorize/
      #   token_url: https://sso.${SECRET_DOMAIN}/application/o/token/
      #   api_url: https://sso.${SECRET_DOMAIN}/application/o/userinfo/
      #   # Optionally map user groups to Grafana roles
      #   role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
    deploymentStrategy:
      type: RollingUpdate
    resources:
      requests:
        cpu: 23m
        memory: 127M
      limits:
        memory: 219M
    admin:
      existingSecret: grafana-secret
      passwordKey: adminPass
      userKey: adminUser
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          # - name: ceph
          #   orgId: 1
          #   folder: Ceph
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/ceph
          - name: cilium
            orgId: 1
            folder: Cilium
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium
          - name: data
            orgId: 1
            folder: Data
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/data
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx
          - name: system
            orgId: 1
            folder: System
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/system
          # - name: thanos
          #   orgId: 1
          #   folder: Thanos
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   allowUiUpdates: true
          #   options:
          #     path: /var/lib/grafana/dashboards/thanos
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            isDefault: true
            access: proxy
            # url: http://thanos-query-frontend.observability.svc.cluster.local:9090
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            jsonData:
              prometheusType: Prometheus
              timeInterval: 1m
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      # ceph:
      #   ceph-cluster:
      #     # renovate: depName="Ceph Cluster"
      #     gnetId: 2842
      #     revision: 17
      #     datasource: Prometheus
      #   ceph-osd:
      #     # renovate: depName="Ceph - OSD (Single)"
      #     gnetId: 5336
      #     revision: 9
      #     datasource: Prometheus
      #   ceph-pools:
      #     # renovate: depName="Ceph - Pools"
      #     gnetId: 5342
      #     revision: 9
      #     datasource: Prometheus
      #   host-overview:
      #     url: https://raw.githubusercontent.com/ceph/ceph/main/monitoring/ceph-mixin/dashboards_out/hosts-overview.json
      #     datasource: Prometheus
      data:
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        # zfs:
        #   # renovate: depName="ZFS"
        #   gnetId: 7845
        #   revision: 4
        #   datasource: Prometheus
      # default:
      #   palworld:
      #     # renovate: depName="Palworld"
      #     gnetId: 20421
      #     revision: 3
      #     datasource:
      #       - { name: DS_PROMETHEUS, value: Prometheus }
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 16761
          revision: 16
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 17
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 34
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 29
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      network:
        # blackbox-exporter:
        #   # renovate: depName="Prometheus Blackbox Exporter"
        #   gnetId: 7587
        #   revision: 3
        #   datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        # unifi-insights:
        #   # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
        #   gnetId: 11315
        #   revision: 9
        #   datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        # speedtest-exporter-hub:
        #   # renovate: depName="Speedtest Exporter"
        #   gnetId: 16541
        #   revision: 1
        #   datasource:
        #     - { name: datasource, value: Prometheus }
        # unifi-network-sites:
        #   # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
        #   gnetId: 11311
        #   revision: 5
        #   datasource: Prometheus
        # unifi-uap:
        #   # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
        #   gnetId: 11314
        #   revision: 10
        #   datasource: Prometheus
        # unifi-usw:
        #   # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
        #   gnetId: 11312
        #   revision: 9
        #   datasource: Prometheus
      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
      system:
        # kasa:
        #   # renovate: depName="Kasa"
        #   gnetId: 10957
        #   revision: 3
        #   datasource:
        #     - { name: DS_PROMETHEUS, value: Prometheus }
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 36
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        spegel:
          # renovate: depName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      # thanos:
      #   thanos-bucket-replicate:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
      #     datasource: Prometheus
      #   thanos-compact:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
      #     datasource: Prometheus
      #   thanos-overview:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
      #     datasource: Prometheus
      #   thanos-query:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
      #     datasource: Prometheus
      #   thanos-query-frontend:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
      #     datasource: Prometheus
      #   thanos-receieve:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
      #     datasource: Prometheus
      #   thanos-rule:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
      #     datasource: Prometheus
      #   thanos-sidecar:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
      #     datasource: Prometheus
      #   thanos-store:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
      #     datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/icon: grafana.png
        gethomepage.dev/name: Grafana
        gethomepage.dev/group: Observability
        gethomepage.dev/description: Monitoring Dashboards
        gethomepage.dev/widget.type: grafana
        gethomepage.dev/widget.url: http://grafana.observability
        gethomepage.dev/widget.username: '{{`{{HOMEPAGE_VAR_GRAFANA_USERNAME}}`}}'
        gethomepage.dev/widget.password: '{{`{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}`}}'
        # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
      hosts:
        - &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
