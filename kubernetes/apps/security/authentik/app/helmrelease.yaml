---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.12.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret
      deploymentStrategy:
        type: RollingUpdate
      envFrom: &envFrom
        - secretRef:
            name: authentik-secret
    server:
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16
          envFrom: *envFrom
      metrics:
        # -- deploy metrics service
        enabled: true
        serviceMonitor:
        # -- enable a prometheus ServiceMonitor
          enabled: true

      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Platform Service
          gethomepage.dev/name: Authentik
          gethomepage.dev/description: Authentication provider
          gethomepage.dev/icon: https://raw.githubusercontent.com/chaijunkin/dashboard-icons/main/png/authentik.png
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - &host auth.${SECRET_DOMAIN}
        https: false
        tls:
          - secretName: *host
            hosts:
            - *host
    worker:
      resources:
        requests:
          cpu: 50m
          memory: 512Mi
        limits:
          memory: 1Gi
    authentik:
      log_level: info
      email:
        port: 465
        use_ssl: true
      error_reporting:
        enabled: false
        send_pii: false
      redis:
        host: dragonfly.database.svc.cluster.local
    prometheus:
      rules:
        enabled: true
    
      # AUTHENTIK_REDIS__PASSWORD:
      #   secretKeyRef:
      #     name: authentik-secret
      #     key: AUTHENTIK_REDIS__PASSWORD



    postgresql:
      enabled: false

    

    redis:
      enabled: false