---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${APP}-volsync"
spec:
  target:
    deletionPolicy: Delete
    template:
      type: Opaque
      data:
        RESTIC_REPOSITORY: "/repository/${APP}"
        RESTIC_PASSWORD: "{{ .RESTIC_PASSWORD }}"
  data:
    - secretKey: RESTIC_PASSWORD
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: 75d679a4-15fc-474b-a8db-aab74209f0ff
        property: restic_password
# ---
# apiVersion: volsync.backube/v1alpha1
# kind: ReplicationDestination
# metadata:
#   name: "${APP}-bootstrap"
# spec:
#   trigger:
#     manual: restore-once
#   restic:
#     repository: "${APP}-volsync"
#     copyMethod: "${VOLSYNC_COPYMETHOD:-Snapshot}"
#     volumeSnapshotClassName: "${VOLSYNC_SNAPSHOTCLASS:-local-hostpath}"
#     cacheStorageClassName: "${VOLSYNC_CACHE_SNAPSHOTCLASS:-local-hostpath}"
#     cacheAccessModes: ["${VOLSYNC_CACHE_ACCESSMODES:-ReadWriteOnce}"]
#     cacheCapacity: "${VOLSYNC_CACHE_CAPACITY:-4Gi}"
#     storageClassName: "${VOLSYNC_STORAGECLASS:-local-hostpath}"
#     accessModes: ["${VOLSYNC_ACCESSMODES:-ReadWriteOnce}"]
#     moverSecurityContext:
#       runAsUser: "${VOLSYNC_UID:-2000}"
#       runAsGroup: "${VOLSYNC_GID:-2000}"
#       fsGroup: "${VOLSYNC_GID:-2000}"
#     capacity: "${VOLSYNC_CAPACITY:=2Gi}"
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: "${APP}"
spec:
  sourcePVC: "${CLAIM:-${APP}}"
  trigger:
    schedule: "0 * * * *"
  restic:
    repository: "${APP}-volsync"
    copyMethod: "${VOLSYNC_COPYMETHOD:-Snapshot}"
    pruneIntervalDays: 14
    volumeSnapshotClassName: "${VOLSYNC_SNAPSHOTCLASS:-local-hostpath}"
    cacheCapacity: "${VOLSYNC_CACHE_CAPACITY:-8Gi}"
    cacheStorageClassName: "${VOLSYNC_CACHE_SNAPSHOTCLASS:-local-hostpath}"
    cacheAccessModes: ["${VOLSYNC_CACHE_ACCESSMODES:-ReadWriteOnce}"]
    storageClassName: "${VOLSYNC_STORAGECLASS:-local-hostpath}"
    accessModes: ["${VOLSYNC_ACCESSMODES:-ReadWriteOnce}"]
    moverSecurityContext:
      runAsUser: "${VOLSYNC_UID:-2000}"
      runAsGroup: "${VOLSYNC_GID:-2000}"
      fsGroup: "${VOLSYNC_GID:-2000}"
    moverAffinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/created-by: volsync
            namespaceSelector:
              matchExpressions:
                - key: kubernetes.io/metadata.name
                  operator: Exists
    retain:
      hourly: 24
      daily: 7
